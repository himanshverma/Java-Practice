package com.himansh;

//https://www.geeksforgeeks.org/sum-of-two-linked-lists/

class LinkedList {
	static Node head1, head2;
	static class Node {
		int data;
		Node next;
		Node(int d) {
			data = d;
			next = null;
		}
	}

	Node addTwoLists(Node first, Node second) {
		Node res = null; // res is head node of the resultant list
		Node prev = null;
		Node temp = null;
		int sum1 = 0, sum2 = 0, result = 0;

		while (first != null || second != null) {
			sum1 = sum1 * 10 + first.data;
			first = first.next;
			sum2 = sum2 * 10 + second.data;
			second = second.next;
		}
		
		// If list size isn't equal
		//Just to check whether second list is bigger
		while (second != null) {
				sum2 = sum2 * 10 + second.data;
				second = second.next;
			}
		//to check whether second list is bigger
		while (first != null) {
			sum1 = sum1 * 10 + first.data;
			first = first.next;
		}
		
		result = sum1 + sum2;

		while (result != 0) {
			Node tem = res;
			res = new Node(result % 10);
			result = result / 10;
			res.next = tem;

		}

		return res;
	}

	/* Utility function to print a linked list */

	void printList(Node head) {
		while (head != null) {
			System.out.print(head.data + " ");
			head = head.next;
		}
		System.out.println("");
	}

	public static void main(String[] args) {
		LinkedList list = new LinkedList();

		// creating first list
		list.head1 = new Node(5);
		list.head1.next = new Node(6);
		list.head1.next.next = new Node(3);
		// list.head1.next.next.next = new Node(4);
		// list.head1.next.next.next.next = new Node(6);
		System.out.print("First List is ");
		list.printList(head1);

		// creating seconnd list
		list.head2 = new Node(8);
		list.head2.next = new Node(4);
		list.head2.next.next = new Node(2);
		System.out.print("Second List is ");
		list.printList(head2);

		// add the two lists and see the result
		Node rs = list.addTwoLists(head1, head2);
		System.out.print("Resultant List is ");
		list.printList(rs);
	}
}
